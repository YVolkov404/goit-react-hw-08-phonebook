{"version":3,"file":"static/js/600.2d9f6c63.chunk.js","mappings":"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","sources":["components/form/SignInForm.jsx","components/nav-menu/LoginNavMenu.js","media/login.svg","pages/Login.js","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { signin } from 'rdx/auth/authorization';\n//-------------------------------------------\nimport {\n  Button,\n  Input,\n  FormControl,\n  FormLabel,\n  Stack,\n  Tooltip,\n  InputLeftAddon,\n  Icon,\n  InputGroup,\n} from '@chakra-ui/react';\n\nimport { HiMail, HiKey } from 'react-icons/hi';\n//------------------------------------------\n\nconst validation = Yup.object({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string()\n    .min(6, 'Weak password!')\n    .min(9, 'Fair password')\n    .min(12, 'Good password!')\n    .max(15, 'Strong password!')\n    .required('Required'),\n});\n//-------------------------------------------\nexport const SignInForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n    const { email, password } = values;\n\n    dispatch(\n      signin({\n        email: email,\n        password: password,\n      })\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={validation}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      {formik => (\n        <Stack\n          onSubmit={formik.handleSubmit}\n          as=\"form\"\n          w=\"100%\"\n          spacing=\"1.5rem\"\n        >\n          <FormControl isInvalid={formik.errors.email && formik.touched.email}>\n            <FormLabel as=\"label\" variant=\"primary\">\n              Email\n            </FormLabel>\n\n            <Tooltip\n              label={formik.errors.email}\n              isOpen={true}\n              placement=\"top-end\"\n              variant=\"primary\"\n            >\n              <InputGroup>\n                <InputLeftAddon>\n                  <Icon as={HiMail} />\n                </InputLeftAddon>\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  {...formik.getFieldProps('email')}\n                  placeholder=\"john-dow@mail.com\"\n                  size=\"md\"\n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                />\n              </InputGroup>\n            </Tooltip>\n          </FormControl>\n\n          <FormControl\n            isInvalid={formik.errors.password && formik.touched.password}\n          >\n            <FormLabel as=\"label\" variant=\"primary\">\n              Password\n            </FormLabel>\n\n            <Tooltip\n              label={formik.errors.password}\n              isOpen=\"true\"\n              placement=\"top-end\"\n              variant=\"primary\"\n            >\n              <InputGroup>\n                <InputLeftAddon>\n                  <Icon as={HiKey} />\n                </InputLeftAddon>\n                <Input\n                  name=\"password\"\n                  type=\"password\"\n                  {...formik.getFieldProps('password')}\n                  placeholder=\"Enter your password\"\n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                />\n              </InputGroup>\n            </Tooltip>\n          </FormControl>\n\n          <Button\n            type=\"submit\"\n            variant=\"secondary\"\n            width=\"xs\"\n            zIndex=\"333\"\n            mt=\"50px\"\n          >\n            SignIn\n          </Button>\n        </Stack>\n      )}\n    </Formik>\n  );\n};\n","import { Link as ReactRouterLink } from 'react-router-dom';\nimport { Button, HStack } from '@chakra-ui/react';\n\nexport const LoginNavMenu = () => {\n  return (\n    <HStack w=\"100%\" justify=\"space-between\">\n      <Button type=\"button\" as={ReactRouterLink} to=\"/\">\n        Home\n      </Button>\n\n      <Button type=\"button\" as={ReactRouterLink} to=\"/register\">\n        SignUp\n      </Button>\n    </HStack>\n  );\n};\n","var _path, _path2, _path3, _path4, _path5;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLogin(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 470,\n    height: 248,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M330.202 244.228c-75.38 15.539-124.287-29.207-223.848-29.207-34.021 0-116.257 19.158-103.524-99.231 7.226-67.182 85.1-97.671 157.877-58.405 21.416 8.375 38.324 5.78 56.68-2.541 18.357-8.322 41.966-45.47 86.463-53.112 133.906-22.998 282.158 189.766 26.352 242.496Z\",\n    fill: \"#F56565\",\n    fillOpacity: 0.3\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M327.457 92.384c5.248 3.456 10.517 7.112 16.557 8.847 6.039 1.736 13.136 1.205 17.786-3.02 18.767-17.052 48.989-19.903 70.613-6.662 21.625 13.241 32.825 41.456 26.168 65.923-6.656 24.467-30.606 43.12-55.957 43.581-13.136.239-25.283 6.518-37.835 10.399-12.551 3.881-27.647 4.877-37.463-3.856-10.579-9.411-9.372-28.804 2.294-36.829l-54.995 4.12c4.032 1.635 8.325 3.483 10.636 7.168 2.312 3.686 1.252 9.717-2.959 10.812-15.681 4.079-31.737-3.354-46.789-9.354-15.051-6-33.189-10.406-46.61-1.328-30.248 20.458-70.21 17.061-106.236 11.095-8.643-1.431-19.04-4.579-20.837-13.153a241.005 241.005 0 0 1-50.239 4.088c-4.107-.098-8.957-.745-10.876-4.377-2.488-4.708 1.977-10.048 6.326-13.119 13.28-9.379 29.492-14.54 45.75-14.561 4.631-.007 7.723-4.846 8.902-9.324 1.179-4.478 1.509-9.462 4.516-12.983-10.226-1.535-21.059 1.586-28.9 8.327-1.454 1.251-3.91-.005-4.522-1.825-.61-1.819.019-3.797.665-5.605 3.618-10.118 8.154-20.399 16.376-27.318 8.222-6.918 21.07-9.414 29.738-3.062 2.718 1.992 7.336 4.55 13.85 7.672 6.68-1.01 11.646-1.813 14.9-2.412 9.854-1.811 18.991-6.286 27.922-10.824 31.125-15.814 63.038-33.421 97.936-34.414 33.385-.95 65.39 13.626 93.283 31.994Zm35.319 27.416 3.131 7.888c.154.386.32.79.643 1.052.393.317.93.359 1.43.432 3.827.551 6.827 3.457 9.54 6.213l10.425 10.591c1.041 1.058 2.771-.086 3.769-1.186 2.24-2.472 4.523-5.009 5.817-8.084 1.293-3.076 1.433-6.848-.495-9.571-1.146-1.619-2.891-2.71-4.68-3.566a27.953 27.953 0 0 0-9.415-2.602c-3.177-.298-6.377-.047-9.569-.071a55.785 55.785 0 0 1-10.596-1.096Z\",\n    fill: \"#fff\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M61.83 180.125a240.935 240.935 0 0 1-50.239 4.087c-4.842-7.057 47.561-20.059 49.461-11.488 1.503 6.779 1.572 11.187.778 7.401ZM315.609 157.266c1.768-.189 8.793-1.911 16.169-1.112 3.963-2.036 22.958-.437 34.296 1.784 7.278 1.426 25.723 2.374 32.421 5.79 11.627 5.932 11.894 9.598 10.145 10.383-4.969 2.23-10.957 3.33-14.175 3.388-5.794.106-17.451-5.249-30.237-8.604-5.71-1.499-9.906-2.771-13.213-4.006l.54-.236c-7.152 3.229-14.551 3.743-21.936 6.116l-54.995 4.121c4.033 1.634-56.632-20.453-39.111-23.676 1.08-.198 2.27-.319 3.561-.373 16.409-.688 49.01 9.366 76.535 6.425Z\",\n    fill: \"#E7EAEE\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M151.897 129.995c.223.4.054.93-.282 1.242-.335.311-.797.446-1.247.53-3.314.622-6.935-1.186-8.429-4.208-.167-.337-.312-.708-.261-1.08.051-.372.364-.733.739-.711.965 1.065 1.943 2.141 3.145 2.929 1.201.788 2.669 1.268 4.082 1.008.802-.147 1.854-.421 2.253.29ZM154.069 171.232c.046-.933 1.216-1.323 2.149-1.358 4.183-.155 8.079 1.896 11.943 3.507 3.863 1.611 8.363 2.799 12.136.986.788-.378 1.613-.895 2.468-.712-1.418 2.749-4.806 3.997-7.894 3.828-3.088-.17-5.983-1.476-8.831-2.684-2.847-1.207-5.843-2.356-8.931-2.184-.634.036-1.282.126-1.893-.047-.61-.173-1.18-.702-1.147-1.336ZM161.392 179.061c-2.885-.842-6.26-.42-8.63-2.27-.289-.225-.575-.522-.587-.889-.015-.515.539-.891 1.054-.905.515-.013.998.222 1.481.399 1.765.649 3.708.562 5.55.937 2.763.564 5.196 2.139 7.8 3.225 2.602 1.085 5.724 1.641 8.148.199.978-.582 2.263-1.45 3.073-.652-2.638 3.006-7.105 4.259-10.922 3.063-2.43-.761-4.522-2.394-6.967-3.107ZM78.23 148.628c-.464-.593-.46-1.454-.165-2.147.297-.692.84-1.247 1.402-1.748 2.666-2.382 6.357-3.995 9.819-3.099 2.594.67 4.646 2.615 6.463 4.586.778.843 1.58 2.051.999 3.04-.623 1.055-2.184.832-3.366.512-3.671-.996-7.562-1.582-11.27-.743-1.347.305-3.032.685-3.882-.401ZM138.35 184.395c.511.309.441 1.135.015 1.554-.426.419-1.055.54-1.644.641l-9.907 1.698c-.689.119-1.46.22-2.035-.178-.575-.398-.592-1.506.093-1.651 4.14-.874 8.313-1.592 12.507-2.154.329-.043.687-.081.971.09ZM129.923 149.889c-.726.27-1.529-.432-1.627-1.201-.098-.768.3-1.512.76-2.135 2.142-2.901 5.959-4.385 9.537-3.94 3.578.447 6.829 2.714 8.708 5.791.29.475.559 1.02.449 1.565-.119.591-.672 1.019-1.256 1.165-.584.146-1.199.062-1.793-.04-2.47-.428-4.879-1.167-7.352-1.583-2.473-.417-5.075-.494-7.426.378ZM83.228 130.042c.281-.823 1.472-.62 2.325-.45 2.66.527 5.26-.955 7.568-2.38.308-.19.718.172.711.534-.007.361-.267.663-.522.921-2.3 2.324-5.74 3.914-8.85 2.903-.695-.226-1.468-.836-1.232-1.528ZM175.607 144.129c-.897-.17-1.362-1.259-1.194-2.157.168-.898.777-1.639 1.352-2.349 2.173-2.679 4.154-5.529 5.715-8.607 1.342-2.646 2.37-5.452 3.879-8.008 4.319-7.309 12.693-12.035 21.184-11.953-3.403-2.435-7.424-3.875-11.499-4.829-12.601-2.948-26.216-1.348-37.791 4.441-1.829.915-3.613 1.932-5.522 2.67-.879.341-1.853.621-2.755.343-.901-.279-1.609-1.341-1.189-2.186.241-.487.762-.76 1.25-1.001 4.931-2.433 9.883-4.875 15.11-6.583 11.693-3.821 24.613-3.782 36.282.109 3.916 1.305 8.009 3.333 9.704 7.097.26.577.284 1.5-.342 1.595-6.725 1.013-13.568 3.341-18.209 8.31-6.012 6.438-7.468 16.322-13.987 22.245-.556.504-1.251 1.004-1.988.863Z\",\n    fill: \"#00160A\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M274.625 174.887c4.032 1.635 8.325 3.483 10.636 7.168 2.312 3.686 1.252 9.717-2.959 10.812-15.681 4.079-31.737-3.354-46.789-9.354-15.051-6-33.189-10.406-46.61-1.328-30.248 20.458-70.21 17.061-106.236 11.095-8.643-1.431-19.04-4.579-20.837-13.153a241.005 241.005 0 0 1-50.239 4.088c-4.107-.098-8.957-.745-10.876-4.377-2.488-4.708 1.977-10.048 6.326-13.119 13.28-9.379 29.492-14.54 45.75-14.561 4.631-.007 7.723-4.846 8.902-9.324 1.179-4.478 1.509-9.462 4.516-12.983-10.226-1.535-21.059 1.586-28.9 8.327-1.454 1.251-3.91-.005-4.522-1.825-.61-1.819.019-3.797.665-5.605 3.618-10.118 8.154-20.399 16.376-27.318 8.222-6.918 17.323-9.544 29.681-3.917 3.237 1.474 7.858 4.092 13.866 7.856 6.64-.55 11.62-1.13 14.941-1.741 9.854-1.811 18.991-6.286 27.922-10.824 31.125-15.814 63.038-33.421 97.936-34.414 33.385-.95 65.39 13.626 93.283 31.994 5.248 3.456 10.517 7.112 16.557 8.847 6.039 1.736 13.136 1.205 17.786-3.02 18.767-17.052 48.989-19.903 70.613-6.662 21.625 13.241 32.825 41.456 26.168 65.923-6.656 24.467-30.606 43.12-55.957 43.581-13.136.239-25.283 6.518-37.835 10.399-12.551 3.881-27.647 4.877-37.463-3.856-10.579-9.411-9.372-28.804 2.294-36.829l-54.995 4.12Zm106.112-33.819c-9.251-9.306-23.053-13.855-36.024-11.877a43.395 43.395 0 0 1 19.507-1.425c-18.417-26.597-48.14-43.21-78.436-54.559-14.722-5.516-30.054-10.05-45.772-10.396-20.463-.452-40.405 6.199-59.305 14.053-20.744 8.62-40.81 18.774-60.854 28.918 6.185-.317 12.453 2.401 16.45 7.131-16.789-6.922-36.674-5.855-52.625 2.825.077-3.172 2.611-6.111 5.736-6.653-9.127-8.043-23.149-9.994-34.126-4.751-10.976 5.243-18.27 17.377-17.75 29.531 9.27-7.666 22.64-10.037 33.98-6.026-6.749 11.264-10.234 24.459-9.925 37.587 3.546-1.494 7.917-.792 10.817 1.739l-9.72 1.046.411 4.435 10.285-1.516a14.69 14.69 0 0 1-8.636 4.815c-.417 4.224 2.514 8.209 6.193 10.326 3.678 2.117 7.998 2.749 12.2 3.341l31.422 4.426c-2.429-2.74-2.827-7.151-4.412-10.201-2.054-3.949-5.02-5.558-6.507-10.799-.513-1.808-1.695-4.353-.041-5.502.695-.484 1.6-.502 2.447-.502 3.457-.005 6.915-.008 10.372-.012 1.118-.001 2.286.01 3.273.533 2.993 1.582 2.048 6.257-.187 8.8-2.235 2.542-5.43 4.573-6.194 7.872-.784 3.387 1.497 6.899 4.527 8.607 3.028 1.708 6.633 1.997 10.108 2.116 7.326.25 14.67-.089 21.941-1.014 18.303-2.328 37.804-9.787 46.299-26.166-.514 4.129-2.671 8.03-5.895 10.659 13.335-4.912 28.437-4.856 41.736.153 12.612 4.75 24.579 13.925 37.955 12.278-.573-.465-.795-1.269-1.368-1.733-1.561-1.266-3.472-2.193-5.033-3.458l14.308 5.233c-.542-.793 0-1.593-1.009-2.807-1.009-1.213-3.212-3.377-4.511-5.28 3.612 1.051 6.778 3.557 8.629 6.832l4.63-1.132c-7.836-10.578-18.669-18.909-30.904-23.767-5.935-2.358-13.294-5.178-14.036-11.522 13.341 12.885 32.461 18.381 51.004 18.773 18.544.393 36.841-3.82 54.909-8.009a36.409 36.409 0 0 1-10.922-8.469c20.294 11.371 43 18.412 66.166 20.518a56772.86 56772.86 0 0 1-3.941-6.683c2.873.082 5.559 2.262 6.229 5.058l4.324-1.703-6.013-5.895c3.224-.778 6.842 1.709 7.271 4.998a7.192 7.192 0 0 0 3.126-3.216l-7.192-5.444a16.084 16.084 0 0 1 10.143 3.381c-3.386-8.233-14.844-8.429-22.456-13.046-5.062-3.07-8.429-8.223-12.604-12.421Zm-17.231-23.655c4.527 1.098 9.268.248 13.927.262 4.827.014 9.634.971 14.157 2.657 2.791 1.042 5.582 2.44 7.397 4.803 2.877 3.746 2.626 9.178.619 13.453-2.007 4.276-5.48 7.655-8.881 10.933 7.138 3.184 14.275 6.367 21.412 9.552 2.017.899 4.197 1.955 5.119 3.962 1.594 3.469-1.501 7.275-4.68 9.389-9.918 6.597-23.407 7.406-34.043 2.043-6.823-3.441-14.387-5.083-21.858-6.692-4.079-.879-8.327-1.756-12.379-.762-2.876.705-5.587 2.34-8.546 2.239-2.645-.089-4.7 2.194-6.25 4.339-5.099 7.057-9.302 16.074-6.317 24.252 2.053 5.623 7.254 9.674 12.923 11.596 5.669 1.922 11.795 1.977 17.769 1.596 7.477-.476 15.094-1.662 21.66-5.271 4.274-2.35 8.101-5.716 12.83-6.916 5.674-1.437 11.651.492 17.489.066 4.648-.339 9.048-2.159 13.304-4.059 10.397-4.64 20.795-10.118 28.17-18.792 10.997-12.934 13.612-31.888 8.357-48.032-5.254-16.144-17.67-29.418-32.531-37.627-4.086-2.258-8.388-4.176-12.918-5.302-10.874-2.704-22.776-.574-32.279 5.363-4.893 3.056-9.144 7.04-13.938 10.249-4.794 3.21-10.429 5.681-16.171 5.121 4.425 4.89 9.248 10.024 15.658 11.578ZM21.239 161.631c-6.66 2.597-13.326 6.043-17.547 11.813 1.942-1.071 4.381-1.19 6.418-.313l-4.455 2.201c-.832.411-1.692.844-2.27 1.57-.577.727-.786 1.835-.227 2.576.56.74 1.974.672 2.245-.216.993-3.257 4.827-5.338 8.099-4.397-2.458 1.4-5.141 3.087-5.821 5.832.367 1.236 2.178 1.44 3.243.71 1.064-.729 1.595-1.992 2.207-3.128.612-1.136 1.502-2.299 2.778-2.486.27-.039.578-.018.765.179.326.345.057.909-.25 1.271-.695.821-1.583 1.54-1.925 2.559-.341 1.02.27 2.445 1.343 2.38a735.593 735.593 0 0 0 45.104-4.154c.542-1.173-1.104-2.126-2.384-2.299a23.235 23.235 0 0 0-9.734.757c.58-1.931 2.53-3.196 4.514-3.558 1.984-.363 4.02.01 6.002.382a10.723 10.723 0 0 0-.76-4.08 15.657 15.657 0 0 1-8.824-2.974 8.031 8.031 0 0 1 6.597.484c.95.526 1.659-1.011 1.675-2.097.05-3.529.101-7.059.153-10.588a112.05 112.05 0 0 0-36.946 7.576Zm346.741-32.459c3.827.551 6.827 3.457 9.54 6.213l10.425 10.591c1.041 1.058 2.771-.086 3.769-1.186 2.24-2.472 4.523-5.009 5.817-8.084 1.293-3.076 1.433-6.848-.495-9.571-1.146-1.619-2.891-2.71-4.68-3.566a27.953 27.953 0 0 0-9.415-2.602c-3.177-.298-6.377-.047-9.569-.071a55.785 55.785 0 0 1-10.596-1.096l3.131 7.888c.154.386.32.79.643 1.052.393.317.93.359 1.43.432Z\",\n    fill: \"#00160A\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogin);\nexport default __webpack_public_path__ + \"static/media/login.2deba14e4c8c686bfe08e6a2e3a22cac.svg\";\nexport { ForwardRef as ReactComponent };","import { SignInForm } from 'components/form/SignInForm';\nimport { LoginNavMenu } from 'components/nav-menu/LoginNavMenu';\nimport { Box, Heading, Image, Container, VStack } from '@chakra-ui/react';\n//-------------------------------------\nimport loginPgImg from 'media/login.svg';\n//----------------------------------------------------\nexport default function Login() {\n  return (\n    <Container as=\"section\" variant=\"secondary\">\n      <VStack spacing=\"2.5rem\">\n        <LoginNavMenu />\n        <Heading as=\"h1\" fontSize=\"2.7rem\">\n          Welcome Back\n        </Heading>\n        <SignInForm />\n        <Box alignSelf=\"flex-end\">\n          <Image src={loginPgImg} />\n        </Box>\n      </VStack>\n    </Container>\n  );\n}\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["validation","Yup","email","required","password","min","max","SignInForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","signin","handleSubmit","resetForm","children","formik","_jsxs","Stack","as","w","spacing","FormControl","isInvalid","errors","touched","FormLabel","variant","Tooltip","label","isOpen","placement","InputGroup","InputLeftAddon","Icon","HiMail","Input","name","type","getFieldProps","placeholder","size","value","onChange","handleChange","HiKey","Button","width","zIndex","mt","LoginNavMenu","HStack","justify","ReactRouterLink","to","Login","Container","VStack","Heading","fontSize","Box","alignSelf","Image","src","loginPgImg","forwardRef","props","ref","styles","useStyleConfig","className","rest","omitThemingProps","jsx","chakra","h2","cx","__css","displayName"],"sourceRoot":""}