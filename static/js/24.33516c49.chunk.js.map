{"version":3,"file":"static/js/24.33516c49.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/src/spacer.tsx","components/form/SignUpForm.jsx","components/nav-menu/RegisterNavMenu.js","pages/Register.js"],"sourcesContent":["import { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface SpacerProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * A flexible flex spacer that expands along the major axis of its containing flex layout.\n * It renders a `div` by default, and takes up any available space.\n *\n * @see Docs https://chakra-ui.com/flex#using-the-spacer\n */\nexport const Spacer = chakra(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\",\n  },\n})\n\nSpacer.displayName = \"Spacer\"\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\n// import { NavLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\n//-----------------------------------------------------------\n\nimport { signup } from 'rdx/auth/authorization';\n\n//-----------------------------------------------------------\nimport {\n  Button,\n  Input,\n  FormControl,\n  FormLabel,\n  Stack,\n  Tooltip,\n  InputLeftAddon,\n  Icon,\n  InputGroup,\n} from '@chakra-ui/react';\n\nimport { HiUserCircle, HiMail, HiKey } from 'react-icons/hi';\n\nconst validation = Yup.object({\n  name: Yup.string()\n    .min(5, 'Name too short!')\n    .max(14, 'Name too long!')\n    .required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string()\n    .min(6, 'Weak password!')\n    .min(9, 'Fair password')\n    .min(12, 'Good password!')\n    .max(15, 'Strong password!')\n    .required('Required'),\n});\n\n//---------------------------------------------------\n\nexport const SingUpForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n    const { name, email, password } = values;\n    dispatch(\n      signup({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={validation}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      {formik => (\n        <Stack\n          as=\"form\"\n          w=\"100%\"\n          spacing=\"1.75rem\"\n          onSubmit={formik.handleSubmit}\n          zIndex=\"999\"\n        >\n          <FormControl isInvalid={formik.errors.name && formik.touched.name}>\n            <FormLabel as=\"label\" variant=\"secondary\">\n              Name\n            </FormLabel>\n\n            <Tooltip\n              label={formik.errors.name}\n              placement=\"top-end\"\n              isOpen={true}\n              variant=\"primary\"\n            >\n              <InputGroup>\n                <InputLeftAddon>\n                  <Icon as={HiUserCircle} variant=\"secondary\" />\n                </InputLeftAddon>\n                <Input\n                  name=\"name\"\n                  type=\"text\"\n                  {...formik.getFieldProps('name')}\n                  placeholder=\"Jane Dow\"\n                  size=\"md\"\n                  value={formik.values.name}\n                  onChange={formik.handleChange}\n                />\n              </InputGroup>\n            </Tooltip>\n          </FormControl>\n\n          <FormControl isInvalid={formik.errors.email && formik.touched.email}>\n            <FormLabel as=\"label\" variant=\"secondary\">\n              Email\n            </FormLabel>\n\n            <Tooltip\n              label={formik.errors.email}\n              isOpen={true}\n              placement=\"top-end\"\n              variant=\"primary\"\n            >\n              <InputGroup>\n                <InputLeftAddon>\n                  <Icon as={HiMail} variant=\"secondary\" />\n                </InputLeftAddon>\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  {...formik.getFieldProps('email')}\n                  placeholder=\"john-dow@mail.com\"\n                  size=\"md\"\n                  value={formik.email}\n                  onChange={formik.handleChange}\n                />\n              </InputGroup>\n            </Tooltip>\n          </FormControl>\n\n          <FormControl\n            isInvalid={formik.errors.password && formik.touched.password}\n          >\n            <FormLabel as=\"label\" variant=\"secondary\">\n              Password\n            </FormLabel>\n\n            <Tooltip\n              label={formik.password}\n              isOpen=\"true\"\n              placement=\"top-end\"\n              variant=\"primary\"\n            >\n              <InputGroup>\n                <InputLeftAddon>\n                  <Icon as={HiKey} variant=\"secondary\" />\n                </InputLeftAddon>\n                <Input\n                  name=\"password\"\n                  type=\"password\"\n                  {...formik.getFieldProps('password')}\n                  placeholder=\"Enter your password\"\n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                />\n              </InputGroup>\n            </Tooltip>\n          </FormControl>\n\n          <Button\n            type=\"submit\"\n            width=\"xs\"\n            alignSelf=\"flex-end\"\n            mt={16}\n            zIndex=\"333\"\n          >\n            SignUp\n          </Button>\n        </Stack>\n      )}\n    </Formik>\n  );\n};\n","import { Link as ReactRouterLink } from 'react-router-dom';\nimport { Button, HStack } from '@chakra-ui/react';\n\nexport const RegisterNavMenu = () => {\n  return (\n    <HStack w=\"100%\" justify=\"space-between\">\n      <Button type=\"button\" as={ReactRouterLink} to=\"/\">\n        Home\n      </Button>\n\n      <Button type=\"button\" as={ReactRouterLink} to=\"/login\">\n        SignIn\n      </Button>\n    </HStack>\n  );\n};\n","import { Container, Heading, Spacer, VStack } from '@chakra-ui/react';\nimport { SingUpForm } from 'components/form/SignUpForm';\nimport { RegisterNavMenu } from 'components/nav-menu/RegisterNavMenu';\n//------------------------------------------ -\n\n//-------------------------------------------------------------\nexport default function Register() {\n  return (\n    <Container as=\"section\" variant=\"primary\">\n      <VStack spacing=\"2.5rem\">\n        <RegisterNavMenu />\n        <Heading as=\"h1\" variant=\"secondary\">\n          Let Us Begin\n        </Heading>\n        <SingUpForm />\n        <Spacer />\n      </VStack>\n    </Container>\n  );\n}\n"],"names":["Spacer","chakra","baseStyle","flex","justifySelf","alignSelf","displayName","validation","Yup","name","min","max","required","email","password","SingUpForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","signup","handleSubmit","resetForm","children","formik","_jsxs","Stack","as","w","spacing","zIndex","FormControl","isInvalid","errors","touched","FormLabel","variant","Tooltip","label","placement","isOpen","InputGroup","InputLeftAddon","Icon","HiUserCircle","Input","type","getFieldProps","placeholder","size","value","onChange","handleChange","HiMail","HiKey","Button","width","mt","RegisterNavMenu","HStack","justify","ReactRouterLink","to","Register","Container","VStack","Heading"],"sourceRoot":""}